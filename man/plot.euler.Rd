% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.euler.R
\name{plot.euler}
\alias{plot.euler}
\title{Plot area-proportional Euler diagrams}
\usage{
\method{plot}{euler}(x, shapes = list(), legend = FALSE,
  labels = identical(legend, FALSE), quantities = FALSE, strips = NULL,
  ..., fill_alpha, auto.key, fontface, par.settings, default.prepanel,
  default.scales, panel)
}
\arguments{
\item{x}{an object of class \code{'euler'}, generated from \code{\link[=euler]{euler()}}}

\item{shapes}{a list of graphical parameters for the shapes (ellipses)
in the diagram. The item \code{n} sets the number of vertices to be used for
each ellipse. Edges are plotted with \code{\link[grid:grid.polyline]{grid::grid.polyline()}} and
fills with \code{\link[grid:grid.path]{grid::grid.path()}}.}

\item{legend}{a logical scalar or list. If a list,
the item \code{side} can be used to set the location of the legend. See
\code{\link[grid:grid.legend]{grid::grid.legend()}}.}

\item{labels}{a logical, vector, or list. Vectors are assumed to be
text for the labels. See \code{\link[grid:grid.text]{grid::grid.text()}}.}

\item{quantities}{a logical, vector, or list. Vectors are assumed to be
text for the quantities' labels, which by
default are the original values in the input to \code{\link[=euler]{euler()}}. See
\code{\link[grid:grid.text]{grid::grid.text()}}.}

\item{strips}{a list. Will be ignored unless the \code{'by'} argument
was used in \code{\link[=euler]{euler()}}.}

\item{...}{parameters to update \code{shapes} with and thereby a shortcut
to set these parameters}

\item{fill_alpha}{deprecated}

\item{auto.key}{deprecated}

\item{fontface}{deprecated}

\item{par.settings}{deprecated}

\item{default.prepanel}{deprecated}

\item{default.scales}{deprecated}

\item{panel}{deprecated}
}
\value{
Provides an object of class \code{'eulergram'} , which is a
description of the diagram to be drawn. \code{\link[=print.eulergram]{print.eulergram()}} does the actual
plotting of the diagram and is usually called automatically after this
function is called.
}
\description{
Plot Euler diagrams fit with \code{\link[=euler]{euler()}} using \code{\link[grid:Grid]{grid::Grid()}} graphics. This
function sets up all the necessary plot parameters and computes
the geometry of the diagram. \code{\link[=print.euler]{print.euler()}}, meanwhile,
does the actual plotting of the diagram. Please see the \strong{Details} section
to learn about the individual settings for each argument.
}
\details{
Most of the arguments to this function accept either a logical, a vector, or
a list where
\itemize{
\item logical values set the attribute on or off,
\item vectors are shortcuts to commonly used options (see the individual
parameters), and
\item lists enable fine-grained control, including graphical
parameters as described in \code{\link[grid:gpar]{grid::gpar()}} and control
arguments that are specific to each argument.
}

The various \code{\link[grid:gpar]{grid::gpar()}} values that are available for each argument
are:

\tabular{lcccccc}{
\tab shapes \tab labels \tab quantities \tab strips \tab legend \cr
col        \tab x      \tab x      \tab x          \tab x      \tab x      \cr
fill       \tab x      \tab        \tab            \tab        \tab        \cr
alpha      \tab x      \tab x      \tab x          \tab x      \tab x      \cr
lty        \tab x      \tab        \tab            \tab        \tab        \cr
lwd        \tab x      \tab        \tab            \tab        \tab        \cr
lex        \tab x      \tab        \tab            \tab        \tab        \cr
fontsize   \tab        \tab x      \tab x          \tab x      \tab x      \cr
cex        \tab        \tab x      \tab x          \tab x      \tab x      \cr
fontfamily \tab        \tab x      \tab x          \tab x      \tab x      \cr
lineheight \tab        \tab x      \tab x          \tab x      \tab x      \cr
font       \tab        \tab x      \tab x          \tab x      \tab x
}

Defaults for these values, as well as other parameters of the plots, can
be set globally using \code{\link[=eulerr_options]{eulerr_options()}}.

If the diagram has been fit using the \code{data.frame} or \code{matrix} methods
and using the \code{by} argument, the plot area will be split into panels for
each combination of the one to two factors.

For users who are looking to plot their diagram using another package,
all the necessary parameters can be collected if the result of this
function is assigned to a variable (rather than printed to screen).
}
\examples{
fit <- euler(c("A" = 10, "B" = 5, "A&B" = 3))

# Customize colors, remove borders, bump alpha, color labels white
plot(fit,
     shapes = list(fill = c("red", "steelblue4"), alpha = 0.5),
     labels = list(col = "white", font = 4))

# Add quantities to the plot
plot(fit, quantities = TRUE)

# Add a custom legend and retain quantities
plot(fit, quantities = TRUE, legend = list(labels = c("foo", "bar")))

# Plot without fills and distinguish sets with border types instead
plot(fit, fill = "transparent", lty = 1:2)

# save plot parameters to plot using some other method
diagram_description <- plot(fit)
}
\seealso{
\code{\link[=euler]{euler()}}, \code{\link[=print.euler]{print.euler()}}, \code{\link[grid:gpar]{grid::gpar()}},
\code{\link[grid:grid.polyline]{grid::grid.polyline()}}, \code{\link[grid:grid.path]{grid::grid.path()}},
\code{\link[grid:grid.legend]{grid::grid.legend()}}, \code{\link[grid:grid.text]{grid::grid.text()}}
}
