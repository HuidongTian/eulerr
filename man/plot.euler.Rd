% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.euler.R
\name{plot.euler}
\alias{plot.euler}
\title{Plot Area-Proportional Euler Diagrams}
\usage{
\method{plot}{euler}(x, mode = c("split", "overlay"), legend = FALSE,
  fills = TRUE, edges = TRUE, labels = identical(legend, FALSE),
  quantities = FALSE, strips = NULL, n = 200, ..., fill, fill_alpha,
  auto.key, fontface, par.settings, default.prepanel, default.scales, panel)
}
\arguments{
\item{x}{an object of class \code{'euler'}, generated from \code{\link[=euler]{euler()}}}

\item{mode}{"\code{split}", the default, splits up the diagram into individual
polygons and blends the colors of the overlapping shapes using
color averaging in the CIELAB color space. "\code{overlay}" superposes
sets and should be used in conjunction with a suitable \code{fill_alpha} value.}

\item{legend}{draw a legend using \code{\link[grid:grid.legend]{grid::grid.legend()}}. If a list,
the item \code{side} can be used to set the location of the legend.}

\item{fills}{draw fills. Character or integer vectors are assumed to be
colors to fill the shapes in the diagram. If a list, values
\code{fill} and \code{alpha} are accepted. If \code{mode == 'split'}, colors of
intersecting overlaps will be mixed. Fills are drawn using
\code{\link[grid:grid.polygon]{grid::grid.polygon()}}.}

\item{edges}{draw edges. Vectors are assumed to be
colors for edges of the ellipses. If a list, values
\code{col}, \code{alpha}, \code{lty}, \code{lwd}, \code{lex}, \code{lineend}, \code{linejoin} and \code{linemitre}
are accepted. Edges are drawn using \code{\link[grid:grid.polygon]{grid::grid.polygon()}} if
\code{mode == 'overlay'} and \code{\link[grid:grid.polyline]{grid::grid.polyline()}} if \code{mode == 'split'}.}

\item{labels}{draw labels. Vectors are assumed
to be a character or an expression vector. If a list, values \code{labels},
\code{col}, \code{alpha}, \code{fontsize}, \code{cex}, \code{fontfamily}, \code{fontface},
\code{lineheight}, and \code{font} are accepted. Labels are drawn using
\code{\link[grid:grid.text]{grid::grid.text()}}.}

\item{quantities}{draw quantities. If a vector, the values in it will replace
those of the default. If a list, values \code{labels},
\code{col}, \code{alpha}, \code{fontsize}, \code{cex}, \code{fontfamily}, \code{fontface},
\code{lineheight}, and \code{font} are accepted. Quantities are drawn using
\code{\link[grid:grid.text]{grid::grid.text()}}.}

\item{strips}{a list of options for the strips, which are drawn if
\code{x} is a list of \code{euler} objects and ignored otherwise. Arguments
\code{col}, \code{alpha}, \code{fontsize}, \code{cex}, \code{fontfamily}, \code{fontface},
\code{lineheight}, and \code{font} are accepted.}

\item{n}{number of vertices for the ellipses}

\item{...}{ignored}

\item{fill}{deprecated}

\item{fill_alpha}{deprecated}

\item{auto.key}{deprecated}

\item{fontface}{deprecated}

\item{par.settings}{deprecated}

\item{default.prepanel}{deprecated}

\item{default.scales}{deprecated}

\item{panel}{deprecated}
}
\value{
Provides an \code{'euler_diagram'} object, which is a description of
the diagram to be drawn. \code{\link[=print.euler_diagram]{print.euler_diagram()}} does the actual plotting
of the diagram and is usually called automatically after this function
is called.
}
\description{
Plot Euler diagrams fit with \code{\link[=euler]{euler()}} using \code{\link[grid:Grid]{grid::Grid()}} graphics. This
function sets up all the necessary plot paramters and computes
the geometry of the diagram. \code{\link[=print.euler_diagram]{print.euler_diagram()}}, meanwhile,
does the actual plotting of the diagram.
}
\details{
Most of the arguments to this function accept either a logical, a vector, or
a list where
\itemize{
\item logical values set the attribute on or off,
\item vectors are shortcuts to commonly used options (see the individual
parameters), and
\item lists enable fine-grained control, including graphical
parameters as described in \code{\link[grid:gpar]{grid::gpar()}} and control
arguments that are specific to each argument.
}

If the diagram has been fit using the \code{data.frame} or \code{matrix} methods
and using the \code{by} argument, the plot area will be split into panels for
each combination of the one to two factors.

For users who are looking to plot their diagram using another package,
all the necessary parameters can be collected if the result of this
function is assigned to a variable (rather than printed to screen).
}
\examples{
fit <- euler(c("A" = 10, "B" = 5, "A&B" = 3))

# eulerr provides two modes for plotting the diagram
plot(fit, mode = "split")
plot(fit, mode = "overlay")

# Customize colors, remove borders, bump alpha, color labels white
plot(fit,
     fills = list(fill = c("red", "steelblue4"), alpha = 0.5),
     edges = FALSE,
     labels = list(col = "white", font = 4))

# Add quantities to the plot
plot(fit, quantities = TRUE)

# Add a custom legend and retain quantities
plot(fit, quantities = TRUE, legend = list(labels = c("foo", "bar")))

# Plot without fills and distinguish sets with border types instead
plot(fit, fills = FALSE, edges = list(lty = 1:2))

# save plot parameters to plot using some other method
diagram_description <- plot(fit)
}
\seealso{
\code{\link[=euler]{euler()}}, \code{\link[=print.euler_diagram]{print.euler_diagram()}}, \code{\link[grid:gpar]{grid::gpar()}},
\code{\link[grid:grid.polygon]{grid::grid.polygon()}}, \code{\link[grid:grid.polyline]{grid::grid.polyline()}},
\code{\link[grid:grid.legend]{grid::grid.legend()}}, \code{\link[grid:grid.text]{grid::grid.text()}}
}
