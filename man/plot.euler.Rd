% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.euler.R
\name{plot.euler}
\alias{plot.euler}
\title{Plot area-proportional Euler diagrams}
\usage{
\method{plot}{euler}(x, mode = c("split", "overlay"), legend = FALSE,
  fills = TRUE, edges = TRUE, labels = identical(legend, FALSE),
  quantities = FALSE, n = 200, ..., fill, fill_alpha, auto.key, fontface,
  par.settings, default.prepanel, default.scales, panel)
}
\arguments{
\item{x}{an object of class \code{'euler'}, generated from \code{\link[=euler]{euler()}}}

\item{mode}{"\code{split}", the default, splits up the diagram into individual
polygons and blends the colors of the overlapping shapes using
color averaging in the CIELAB color space. "\code{overlay}" superposes
sets and should be used in conjunction with a suitable \code{fill_alpha} value.}

\item{legend}{draw a legend}

\item{fills}{draw fills, either a logical or a list}

\item{edges}{draw edges, either a logical or a list}

\item{labels}{draw labels, either a logical scalar, a character vector, or a
list}

\item{quantities}{draw quantities, either a logical scalar or a list}

\item{n}{number of vertices for the ellipses}

\item{...}{ignored}

\item{fill}{deprecated}

\item{fill_alpha}{deprecated}

\item{auto.key}{deprecated}

\item{fontface}{deprecated}

\item{par.settings}{deprecated}

\item{default.prepanel}{deprecated}

\item{default.scales}{deprecated}

\item{panel}{deprecated}
}
\value{
Provides an \code{'euler_diagram'} object, which is a description of
the diagram to be drawn. \code{\link[=print.euler_diagram]{print.euler_diagram()}} does the actual plotting
of the diagram and is usually called automatically when the object is
printed to screen.
}
\description{
Hello
}
\examples{
fit <- euler(c("A" = 10, "B" = 5, "A&B" = 3))

# eulerr provides two modes for plotting the diagram
plot(fit, mode = "split")
plot(fit, mode = "overlay")

# Customize colors, remove borders, bump alpha, color labels white
plot(fit,
     fills = list(fill = c("red", "steelblue4"), alpha = 0.5),
     edges = FALSE,
     labels = list(col = "white", font = 4))

     fill_alpha = 0.5,
     fill = c("red", "steelblue4"),
     col = "white",
     border = "transparent",
     fontface = "bold.italic")

# Add quantities to the plot
plot(fit, quantities = TRUE)

# Add a custom legend and retain quantities
plot(fit, quantities = TRUE, legend = list(labels = c("foo", "bar")))

# Plot without fills and distinguish sets with border types instead
plot(fit, fills = FALSE, edges = list(lty = 1:2))

}
